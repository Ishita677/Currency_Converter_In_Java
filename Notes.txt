What is Event Handling?

-Event handling in Java is a mechanism that controls the interaction between the user and the graphical user interface (GUI).
-Events are actions like clicking a button, typing in a text field, selecting an item from a menu, etc.
-Event handling involves listening for these events and responding to them.

Components of Event Handling 

1. Events :-
-An event is an object that describes a state change in a source.
-For example, when interacting with the graphical interfaces, events can be generated by pressing a button, entering a character via the keyboard, selecting an item in a list, and clicking the mouse.

2. Event Sources :-
-A source is an object that generates an event. This occurs when the internal state of that object changes in some way. Sources may generate more than one type of event.
-A source object must register listeners to receive notifications about a specific type of event. 
-Here is the syntax to register listeners to receive an event notification:-

    public void addTypeListener (TypeListener e )
    Here, Type is the event name, and e is a reference to the event listener.

-For example, the method that registers a keyboard event listener is called addKeyListener( ). The method that registers a mouse listener is called addMouseListener( ).
-When an event occurs, all registered listeners are notified and receive a copy of the event object.This is known as multicasting the event. In all cases, notifications are sent only to listeners who register to receive them.

3. Event Listeners :-
-A listener is an object that is notified when an event occurs. It has two major requirements.
   -First, it must have been registered with one or more sources to receive notifications about specific types of events.
   -Second, it must implement methods to receive and process these notifications.
-Once the listener is notified of a specific event, it calls the event handler(methods) and passes the information regarding the event.
-The information may contain the source that generated the event and the time when the event was generated.

4. Event Handlers :-
-An event handler is a method that is invoked by an event listener when the event is generated. These methods are defined in the Interfaces and found in java.awt.event package.
-For example, the MouseMotionListener interface defines two methods to receive notifications when the mouse is dragged or moved.

Common Event Listener Interfaces

1. ActionListener: Handles action events like button clicks.
2. MouseListener: Handles mouse events like clicks, enters, exits, presses, and releases.
3. KeyListener: Handles keyboard events like key presses, key releases, and key typing.
4. WindowListener: Handles window events like opening, closing, minimizing, and maximizing.
