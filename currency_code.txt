package ishita;

import javax.swing. * ;
import java.awt. * ;
import java.awt.event. * ;
import javax.swing.border.LineBorder;

public class currency extends JFrame implements ActionListener
 {
  private JTextField jtxtAmount;
  private JTextField jtxtAmountConverted;
  currency()
   {
    setSize(1174, 527);
    setVisible(true);
    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    getContentPane().setLayout(null);

    JPanel panel = new JPanel();
    panel.setBorder(new LineBorder(new Color(91, 189, 170), 10));
    panel.setBounds(10, 10, 1125, 75);
    getContentPane().add(panel);
    panel.setLayout(null);

    JLabel lblNewLabel = new JLabel("Currency Converter");
    lblNewLabel.setFont(new Font("Tahoma", Font.BOLD, 52));
    lblNewLabel.setBounds(255, 10, 563, 55);
    panel.add(lblNewLabel);

    JPanel panel_1 = new JPanel();
    panel_1.setBorder(new LineBorder(new Color(91, 189, 170), 10));
    panel_1.setBounds(10, 91, 1125, 228);
    getContentPane().add(panel_1);
    panel_1.setLayout(null);

    JLabel lblNewLabel_1 = new JLabel("Amount");
    lblNewLabel_1.setFont(new Font("Tahoma", Font.PLAIN, 40));
    lblNewLabel_1.setBounds(34, 28, 192, 49);
    panel_1.add(lblNewLabel_1);

    JLabel lblNewLabel_1_1 = new JLabel("From Currency");
    lblNewLabel_1_1.setFont(new Font("Tahoma", Font.PLAIN, 40));
    lblNewLabel_1_1.setBounds(34, 87, 281, 43);
    panel_1.add(lblNewLabel_1_1);

    JLabel lblNewLabel_1_2 = new JLabel("To Currency");
    lblNewLabel_1_2.setFont(new Font("Tahoma", Font.PLAIN, 40));
    lblNewLabel_1_2.setBounds(34, 157, 293, 43);
    panel_1.add(lblNewLabel_1_2);

    jtxtAmount = new JTextField();
    jtxtAmount.setFont(new Font("Tahoma", Font.PLAIN, 30));
    jtxtAmount.setBounds(398, 28, 622, 36);
    panel_1.add(jtxtAmount);
    jtxtAmount.setColumns(10);

    JComboBox jFromCurrency = new JComboBox();
    jFromCurrency.setFont(new Font("Tahoma", Font.PLAIN, 30));
    jFromCurrency.setModel(new DefaultComboBoxModel(new String[] {"INR-Indian Rupee","CAD-Canadian","USD-United States Dollar","EUR-Euro","AUD-Australian","GBP-Britain" }));
    jFromCurrency.setBounds(397, 91, 623, 43);
    panel_1.add(jFromCurrency);

    JComboBox jToCurrency = new JComboBox();
    jToCurrency.setFont(new Font("Tahoma", Font.PLAIN, 30));
    jToCurrency.setModel(new DefaultComboBoxModel(new String[] { "INR-Indian Rupee","CAD-Canadian", "USD-United States Dollar","EUR-Euro","AUD-Australian","GBP-Britain" }));
    jToCurrency.setBounds(397, 164, 623, 36);
    panel_1.add(jToCurrency);

    JPanel panel_2 = new JPanel();
    panel_2.setBorder(new LineBorder(new Color(91, 189, 170), 10));
    panel_2.setBounds(10, 411, 1125, 69);
    getContentPane().add(panel_2);
    panel_2.setLayout(null);

    JButton btnNewButton = new JButton("Convert");
    btnNewButton.addActionListener(new ActionListener()
     {
      public void actionPerformed(ActionEvent e)
       {
        if (e.getSource() == btnNewButton) 
        {
          String amountText = jtxtAmount.getText();
          if (containsAlphabet(amountText))
           {
            JOptionPane.showMessageDialog(null, "Invalid input! Please enter a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
           }
          else 
          {

            try 
            {
              Double tot;
              Double amount = Double.parseDouble(jtxtAmount.getText());

              if (jFromCurrency.getSelectedItem().toString() == "INR-Indian Rupee" && jToCurrency.getSelectedItem().toString() == "CAD-Canadian") {
                tot = amount * 0.016;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "INR-Indian Rupee" && jToCurrency.getSelectedItem().toString() == "USD-United States Dollar") {
                tot = amount * 0.012;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "INR-Indian Rupee" && jToCurrency.getSelectedItem().toString() == "EUR-Euro") {
                tot = amount * 0.011;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "INR-Indian Rupee" && jToCurrency.getSelectedItem().toString() == "AUD-Australian") {
                tot = amount * 0.018;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "INR-Indian Rupee" && jToCurrency.getSelectedItem().toString() == "GBP-Britain") {
                tot = amount * 0.0094;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "CAD-Canadian" && jToCurrency.getSelectedItem().toString() == "INR-Indian Rupee") {
                tot = amount * 61.10;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "CAD-Canadian" && jToCurrency.getSelectedItem().toString() == "USD-United States Dollar") {
                tot = amount * 0.73;
                jtxtAmountConverted.setText(tot.toString());
              }

              else if (jFromCurrency.getSelectedItem().toString() == "CAD-Canadian" && jToCurrency.getSelectedItem().toString() == "EUR-Euro") {
                tot = amount * 0.68;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "CAD-Canadian" && jToCurrency.getSelectedItem().toString() == "AUD-Australian") {
                tot = amount * 1.08;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "CAD-Canadian" && jToCurrency.getSelectedItem().toString() == "GBP-Britain") {
                tot = amount * 0.57;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "USD-United States Dollar" && jToCurrency.getSelectedItem().toString() == "INR-Indian Rupee") {
                tot = amount * 83.48;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "USD-United States Dollar" && jToCurrency.getSelectedItem().toString() == "CAD-Canadian") {
                tot = amount * 1.36;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "USD-United States Dollar" && jToCurrency.getSelectedItem().toString() == "EUR-Euro") {
                tot = amount * 0.92;
                jtxtAmountConverted.setText(tot.toString());
              }

              else if (jFromCurrency.getSelectedItem().toString() == "USD-United States Dollar" && jToCurrency.getSelectedItem().toString() == "AUD-Australian") {
                tot = amount * 1.48;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "USD-United States Dollar" && jToCurrency.getSelectedItem().toString() == "GBP-Britain") {
                tot = amount * 0.78;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "EUR-Euro" && jToCurrency.getSelectedItem().toString() == "INR-Indian Rupee") {
                tot = amount * 90.58;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "EUR-Euro" && jToCurrency.getSelectedItem().toString() == "CAD-Canadian") {
                tot = amount * 1.48;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "EUR-Euro" && jToCurrency.getSelectedItem().toString() == "USD-United States Dollar") {
                tot = amount * 1.09;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "EUR-Euro" && jToCurrency.getSelectedItem().toString() == "AUD-Australian") {
                tot = amount * 1.61;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "EUR-Euro" && jToCurrency.getSelectedItem().toString() == "GBP-Britain") {
                tot = amount * 0.85;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "AUD-Australian" && jToCurrency.getSelectedItem().toString() == "INR-Indian Rupee") {
                tot = amount * 56.33;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "AUD-Australian" && jToCurrency.getSelectedItem().toString() == "CAD-Canadian") {
                tot = amount * 0.92;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "AUD-Australian" && jToCurrency.getSelectedItem().toString() == "USD-United States Dollar") {
                tot = amount * 0.67;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "AUD-Australian" && jToCurrency.getSelectedItem().toString() == "EUR-Euro") {
                tot = amount * 0.62;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "AUD-Australian" && jToCurrency.getSelectedItem().toString() == "GBP-Britain") {
                tot = amount * 0.53;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "GBP-Britain" && jToCurrency.getSelectedItem().toString() == "INR-Indian Rupee") {
                tot = amount * 106.93;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "GBP-Britain" && jToCurrency.getSelectedItem().toString() == "CAD-Canadian") {
                tot = amount * 1.75;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "GBP-Britain" && jToCurrency.getSelectedItem().toString() == "USD-United States Dollar") {
                tot = amount * 1.28;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "GBP-Britain" && jToCurrency.getSelectedItem().toString() == "EUR-Euro") {
                tot = amount * 1.18;
                jtxtAmountConverted.setText(tot.toString());
              }
              else if (jFromCurrency.getSelectedItem().toString() == "GBP-Britain" && jToCurrency.getSelectedItem().toString() == "AUD-Australian") {
                tot = amount * 1.90;
                jtxtAmountConverted.setText(tot.toString());
              }

            }
            catch(NumberFormatException ex) 
            {
              JOptionPane.showMessageDialog(null, "Invalid input! Please enter a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
            }
          }
        }
      }
    });
    btnNewButton.setFont(new Font("Tahoma", Font.PLAIN, 30));
    btnNewButton.setBounds(130, 21, 163, 32);
    panel_2.add(btnNewButton);

    JButton btnReset = new JButton("Reset");
    btnReset.addActionListener(new ActionListener()
     {
      public void actionPerformed(ActionEvent e) 
      {
        if (e.getSource() == btnReset) 
        {
          jtxtAmount.setText("");
          jtxtAmountConverted.setText("");
          jFromCurrency.setSelectedIndex( - 1);
          jToCurrency.setSelectedIndex( - 1);

        }
      }
    });
    btnReset.setFont(new Font("Tahoma", Font.PLAIN, 30));
    btnReset.setBounds(442, 21, 163, 32);
    panel_2.add(btnReset);

    JButton btnExit = new JButton("Exit");
    btnExit.addActionListener(new ActionListener()
     {
      public void actionPerformed(ActionEvent e)
       {
        if (e.getSource() == btnExit) 
        {
          JFrame frame = new JFrame("Exit");
          if (JOptionPane.showConfirmDialog(frame, "confirm if you want to exit", "Currency Converter", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION)
           {
            System.exit(0);
           }
        }
      }
    });
    btnExit.setFont(new Font("Tahoma", Font.PLAIN, 30));
    btnExit.setBounds(785, 21, 163, 32);
    panel_2.add(btnExit);

    JPanel panel_3 = new JPanel();
    panel_3.setBorder(new LineBorder(new Color(91, 189, 170), 10));
    panel_3.setBounds(10, 325, 1125, 80);
    getContentPane().add(panel_3);
    panel_3.setLayout(null);

    JLabel lblNewLabel_1_3 = new JLabel("Amount Converted");
    lblNewLabel_1_3.setFont(new Font("Tahoma", Font.PLAIN, 36));
    lblNewLabel_1_3.setBounds(47, 10, 317, 50);
    panel_3.add(lblNewLabel_1_3);

    jtxtAmountConverted = new JTextField();
    jtxtAmountConverted.setFont(new Font("Tahoma", Font.PLAIN, 30));
    jtxtAmountConverted.setColumns(10);
    jtxtAmountConverted.setBounds(402, 21, 613, 33);
    panel_3.add(jtxtAmountConverted);
  }
  public void actionPerformed(ActionEvent e) {

 }
  private boolean containsAlphabet(String str) 
  {
    for (int i = 0; i < str.length(); i++)
     {
      char c = str.charAt(i);
      if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z')) {
        return true;
      }
    }
    return false;
  }

  public static void main(String[] args) 
  {
    new currency();
  }
}